// <auto-generated />
using System;
using BC.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BC.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20220409114643_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("BC.Models.Device", b =>
                {
                    b.Property<int>("DevID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Geolocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoadType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("PrefferedCommunication")
                        .HasColumnType("TEXT");

                    b.Property<string>("Protocol")
                        .HasColumnType("TEXT");

                    b.Property<float>("TimeDelay")
                        .HasColumnType("REAL");

                    b.Property<string>("Units")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("DevID");

                    b.HasIndex("UserID");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("BC.Models.Sensors", b =>
                {
                    b.Property<int>("SenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeviceDevID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SenID");

                    b.HasIndex("DeviceDevID");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("BC.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Registered")
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BC.Models.Values", b =>
                {
                    b.Property<int>("ValID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SensorsSenID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("ValID");

                    b.HasIndex("SensorsSenID");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("BC.Models.Device", b =>
                {
                    b.HasOne("BC.Models.User", "User")
                        .WithMany("Devices")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BC.Models.Sensors", b =>
                {
                    b.HasOne("BC.Models.Device", "Device")
                        .WithMany("Sensors")
                        .HasForeignKey("DeviceDevID");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("BC.Models.Values", b =>
                {
                    b.HasOne("BC.Models.Sensors", "Sensors")
                        .WithMany()
                        .HasForeignKey("SensorsSenID");

                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("BC.Models.Device", b =>
                {
                    b.Navigation("Sensors");
                });

            modelBuilder.Entity("BC.Models.User", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
